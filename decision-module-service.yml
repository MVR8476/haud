# = APPLICATION SERVER configurations
# ===============================   
server:
  port: 8086 
  undertow: 
    ioThreads: 15
    workerThreads: 150
    accesslog:
      enabled: true
  compression: 
    enabled: true
    mimeTypes: text/xml, text/css, text/html, application/json
    minResponseSize: 4096  
  
spring:
  #cache:
    #type: redis
  redis:
    #password: mvr#1976
    password: password123  
  protocoldatasource:
    url: jdbc:mysql://localhost:3306/lteruledb
    username: root
    password: mvrmvr
    driver-class-name: com.mysql.jdbc.Driver
  ruledatasource:
    url: jdbc:mysql://localhost:3306/svallin_lteruledb
    username: root
    password: mvrmvr
    driver-class-name: com.mysql.jdbc.Driver  
  associationdatasource:
    url: jdbc:mysql://localhost:3306/associationdb
    username: root
    password: mvrmvr
    driver-class-name: com.mysql.jdbc.Driver
 
  jpa:
    show-sql: true
    hibernate:
      show-sql: true
      ddl-auto: update
    generate-ddl: true
    database-platform: MYSQL
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
names:
  format: 
    ap: AP123    
    cat2: CAT2123
    cat3: CAT3123
    decisionModule: DM123   
haud: 
  app: 
    uuid: X-HAUD-INTERNAL-UUID
  redis:    
    #host: 10.0.28.131
    #port: 6379
    #password: mvr#1976   
    host: 191.255.15.160
    port: 27739
    password: password123 
    usepool: true
    timeout: 60
    cdrkey: CDRCache
    trxkey: TRXCache
    subscriber:
      topic: messageQueue
    jedis:
      pool:
        max: 5
        testOnBorrow: true
        testOnReturn: true
  redisson:
     useSentinel: true
     #setAddress: redis://10.0.28.131:6379
     setAddress: redis://191.255.15.160:16379
     setClientName: null
     setIdleConnectionTimeout: 10000
     setPingTimeout: 1000
     setConnectTimeout: 1000
     setTimeout: 1000
     setRetryAttempts: 3
     setRetryInterval: 1500
     setReconnectionTimeout: 3000
     setSubscriptionsPerConnection: 5
     setSubscriptionConnectionMinimumIdleSize: 1
     setSubscriptionConnectionPoolSize: 50
     setConnectionMinimumIdleSize: 10
     setConnectionPoolSize: 64
     setThreads: 15
     setNettyThreads: 150
     #setPassword: mvr#1976   
     setPassword: password123
     sentinelServersConfig:
       setIdleConnectionTimeout: 10000
       setConnectTimeout: 10000
       setTimeout: 3000
       setRetryAttempts: 3
       setRetryInterval: 1500
       setFailedSlaveReconnectionInterval: 3000
       setFailedSlaveCheckInterval: 60000
       #setPassword: mvr#1976
       setPassword: password123
       setSubscriptionsPerConnection: 5
       setClientName: null
       setThreads: 16
       setNettyThreads: 32
       setSubscriptionConnectionMinimumIdleSize: 1
       setSubscriptionConnectionPoolSize: 50
       setSlaveConnectionMinimumIdleSize: 24
       setSlaveConnectionPoolSize: 64
       setMasterConnectionMinimumIdleSize: 24
       setMasterConnectionPoolSize: 64
       setMasterName: haud-produce-master       
       setDatabase: 0
       #setSentinelAddresses: redis://10.0.28.131:26379,redis://10.0.28.131:26380,redis://10.0.28.131:26381
       setSentinelAddresses: redis://191.255.15.160:27739,redis://191.255.15.160:27740,redis://191.255.15.160:28739
  kafka:
    #bootstrapAddress: 191.255.15.98:9092  
    bootstrapAddress: localhost:9092
    ConsumerConfig:
       heartbeatinterval: 5000   
       isolationlevel: read_committed 
       autoresetconfig: earliest 
       enableautoconfig: true 
       autocomitconfig: 100 
       sessiontimeout: 15000 
    ProducerConfig: 
       retriesconfig: 0
       batchsizeconfig: 4096
       lingerconfig: 1
       buffermemoryconfig: 40960  
    groupId: packetslocalMayuresh
    batch: 
      size: 1000
      wait: 1
      maxbytes: 500000000
    
    message:   
      consumer: 
        topic:
          name: t_req,t_dec_req
          partition: x-reply-partition
      producer:
        topic:
          name: t_req     
          
      listener:
        latch:
          thread:
            size: 5
protobuff:
  partials:
    size: 2    
cron:
  processor:
    interval: 1000
  element:
    interval: 1000
  rule:
    interval: 1000      
decision:
  apid: 4    
  timeToLive: 30
executor:
  poolSize: 1000
  maxPoolSize: 1000
  corePoolSize: 1000
  queueCapacity: 1000  
  waitForTaskCompleteOnShutDown: true
  schedulerDaemon: true
  executorDaemon: true